{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/react-dapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers'; // acts like a backend for our Web3/DApp \n\nimport Greeter from './artifacts/contracts/Greeter.sol/Greeter.json'; //import Token from './artifacts/contracts/Token.sol/Token.json'\n\nimport Token from './artifacts/contracts/Token.sol/Token.json'; // Update with the contract address logged out to the CLI when it was deployed \n// !!!!!!!! Change this ..... \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst greeterAddress = \"0xF4A9d95F2A65523BBBa3b5986fC4D4B95605a797\";\nconst tokenAddress = \"0x0890b47bcb04d5abe0D559Efe4D09c90b5312FD9\"; //const tokenAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\"\n\nfunction App() {\n  _s();\n\n  // store greeting in local state of react. Has nothing to do with the smart contract at the moment\n  const [greeting, setGreetingValue] = useState();\n  const [userAccount, setUserAccount] = useState();\n  const [amount, setAmount] = useState(); // request access to the user's account. This works regardless of the wallet you're using. \n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  } // call the smart contract, read the current greeting value\n\n\n  async function fetchGreeting() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider);\n\n      try {\n        const data = await contract.greet();\n        console.log('data: ', data);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  async function getBalance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const [account] = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(tokenAddress, Token.abi, provider);\n      const balance = await contract.balanceOf(account);\n      console.log(\"Balance: \", balance.toString());\n    }\n  } // call the smart contract, send an update\n\n\n  async function setGreeting() {\n    if (!greeting) return;\n\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer);\n      const transaction = await contract.setGreeting(greeting);\n      await transaction.wait();\n      fetchGreeting();\n    }\n  }\n\n  async function sendCoins() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(tokenAddress, Token.abi, signer);\n      const transation = await contract.transfer(userAccount, amount);\n      await transation.wait();\n      console.log(`${amount} Coins successfully sent to ${userAccount}`);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchGreeting,\n        children: \"Fetch Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setGreeting,\n        children: \"Set Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setGreetingValue(e.target.value),\n        placeholder: \"Set greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getBalance,\n        children: \"Get Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendCoins,\n        children: \"Send Coins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setUserAccount(e.target.value),\n        placeholder: \"Account ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setAmount(e.target.value),\n        placeholder: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8jI9p0yD0bz3yP3ZBSGLtddmGeQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","Greeter","Token","greeterAddress","tokenAddress","App","greeting","setGreetingValue","userAccount","setUserAccount","amount","setAmount","requestAccount","window","ethereum","request","method","fetchGreeting","provider","providers","Web3Provider","contract","Contract","abi","data","greet","console","log","err","getBalance","account","balance","balanceOf","toString","setGreeting","signer","getSigner","transaction","wait","sendCoins","transation","transfer","e","target","value"],"sources":["/home/ubuntu/react-dapp/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers'   // acts like a backend for our Web3/DApp \nimport Greeter from './artifacts/contracts/Greeter.sol/Greeter.json'\n//import Token from './artifacts/contracts/Token.sol/Token.json'\nimport Token from './artifacts/contracts/Token.sol/Token.json'\n\n\n\n// Update with the contract address logged out to the CLI when it was deployed \n// !!!!!!!! Change this ..... \nconst greeterAddress = \"0xF4A9d95F2A65523BBBa3b5986fC4D4B95605a797\"\nconst tokenAddress = \"0x0890b47bcb04d5abe0D559Efe4D09c90b5312FD9\"\n//const tokenAddress = \"0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512\"\n\nfunction App() {\n  // store greeting in local state of react. Has nothing to do with the smart contract at the moment\n  const [greeting, setGreetingValue] = useState()\n  const [userAccount, setUserAccount] = useState()\n  const [amount, setAmount] = useState()\n  // request access to the user's account. This works regardless of the wallet you're using. \n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n\n  // call the smart contract, read the current greeting value\n  async function fetchGreeting() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider)\n      try {\n        const data = await contract.greet()\n        console.log('data: ', data)\n      } catch (err) {\n        console.log(\"Error: \", err)\n      }\n    }    \n  }\n  async function getBalance() {\n    if (typeof window.ethereum !== 'undefined') {\n      const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' })\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(tokenAddress, Token.abi, provider)\n      const balance = await contract.balanceOf(account);\n      console.log(\"Balance: \", balance.toString());\n    }\n  }\n\n  // call the smart contract, send an update\n  async function setGreeting() {\n    if (!greeting) return\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer)\n      const transaction = await contract.setGreeting(greeting)\n      await transaction.wait()\n      fetchGreeting()\n    }\n  }\n  \n  async function sendCoins() {\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(tokenAddress, Token.abi, signer);\n      const transation = await contract.transfer(userAccount, amount);\n      await transation.wait();\n      console.log(`${amount} Coins successfully sent to ${userAccount}`);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={fetchGreeting}>Fetch Greeting</button>\n        <button onClick={setGreeting}>Set Greeting</button>\n        <input onChange={e => setGreetingValue(e.target.value)} placeholder=\"Set greeting\" />\n        <br />\n        <button onClick={getBalance}>Get Balance</button>\n        <button onClick={sendCoins}>Send Coins</button>\n        <input onChange={e => setUserAccount(e.target.value)} placeholder=\"Account ID\" />\n        <input onChange={e => setAmount(e.target.value)} placeholder=\"Amount\"/>   \n   </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}